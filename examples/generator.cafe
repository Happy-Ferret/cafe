(defmacro (defn* nam argsl &expr)
	(def ~nam (coroutine/wrap (Î» (,argsl) ,expr))))

(defmacro (yield val) (coroutine/yield ,val))


(defn (take-generator gen times)
	(with (ret '())
		(for i 1 times
			(push-tail! (gen) ret))
		ret))

(defn* ones ()
	(loop true
		(yield 1)))
